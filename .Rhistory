else
utils::browseURL("http://localhost:8100")
viewer
rstudioapi::viewer(M)
viewer(M)
viewer(M, "chart")
print(M, "chart")
viewer(print(M, "chart"))
tempDir <- tempfile()
dir.create(tempDir)
htmlFile <- file.path(tempDir, "index.html")
write(M, htmlFile)
?write
cat(M, htmlFile)
write(print(M, "chart"), htmlFile)
html <- print(M, "chart")
M
writeLines(M, htmlFile)
str(M)
M$html
viewer(M$html)
writeLines(M$html, htmlFile)
M
str(M)
writeLines(M$chart, htmlFile)
viewer <- getOption("viewer")
viewer(htmlFile)
tempDir <- tempfile()
dir.create(tempDir)
htmlFile <- file.path(tempDir, "index.html")
writeLines(M$header, htmlFile)
htmlFile <- file.path(tempDir, "index.html")
writeLines(M$header, htmlFile)
writeLines(M$chart, htmlFile)
writeLines(M$footer, htmlFile)
str(M)
write(M$header, htmlFile)
write(M$chart, htmlFile)
write(M$footer, htmlFile)
viewer <- getOption("viewer")
viewer(htmlFile)
suppressPackageStartupMessages(library(googleVis))
## Warning: package 'googleVis' was built under R version 3.0.3
M <- gvisMotionChart(Fruits, "Fruit", "Year", options = list(width = 600, height = 400))
tempDir <- tempfile()
dir.create(tempDir)
htmlFile <- file.path(tempDir, "index.html")
write(M$header, htmlFile)
write(M$chart, htmlFile)
write(M$footer, htmlFile)
viewer <- getOption("viewer")
viewer(htmlFile)
suppressPackageStartupMessages(library(googleVis))
## Warning: package 'googleVis' was built under R version 3.0.3
M <- gvisMotionChart(Fruits, "Fruit", "Year", options = list(width = 600, height = 400))
tempDir <- tempfile()
dir.create(tempDir)
htmlFile <- file.path(tempDir, "index.html")
write(M$chart, htmlFile)
viewer <- getOption("viewer")
viewer(htmlFile)
write(M, htmlFile)
str(M$chart)
str(M)
print(M$chart)
print(M, "chart")
suppressPackageStartupMessages(library(googleVis))
getOption("viewer")
getOption("viewer")
??viewer
googleVis.viewer = getOption("viewer")
M <- gvisMotionChart(Fruits, "Fruit", "Year", options = list(width = 600, height = 400))
print(M, "chart")
?predict
shiny::runApp('/Volumes/MY_PERM/Dev/Data_Science_Coursera/devdataprod/Mileage')
fit
mtcars1
runApp("Mileage", display.mode = "showcase")
setwd("/Volumes/MY_PERM/Dev/Data_Science_Coursera/devdataprod")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
Because of the two categorical variables (number of cylinders and transmission type) in the model, I removed the intercept term when using R's "lm()" function.
source('~/.active-rstudio-document', echo=TRUE)
predict(fit10, data.frame(cyl = 6, wt = 1.6, man = FALSE))
predict(fit10, data.frame(cyl = factor(6), wt = 1.6, man = factor(FALSE))
predict(fit10, data.frame(cyl = factor(6), wt = 1.6, man = factor(FALSE)))
predict(fit10, data.frame(cyl = factor(6), wt = 1.6, man = FALSE))
predict(fit10, data.frame(cyl = factor(6), wt = 1.6, man = factor(FALSE)))
predict(fit10, mtcars[1, ])
predict(fit10, mtcars1[1, ])
str(predict(fit10, mtcars1[1, ]))
print(predict(fit10, mtcars1[1, ]))
?predict
temp <- predict(fit10, mtcars1[1, ])
temp$fit
temp[1]
temp[1][1]
setwd("/Volumes/MY_PERM/Dev/Data_Science_Coursera/devdataprod")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
temp
str(temp)
temp$fit
?prediction
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
shiny::runApp('Mileage')
runApp("Mileage", display.mode = "showcase")
shiny::runApp('census-app')
runApp("censusVis", display.mode = "showcase")
setwd("/Volumes/MY_PERM/Dev/Data_Science_Coursera/devdataprod")
shiny::runApp('census-app')
runApp("censusVis", display.mode = "showcase")
setwd("/Volumes/MY_PERM/Dev/Data_Science_Coursera/devdataprod")
runApp("censusVis", display.mode = "showcase")
runApp("census-app", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
?predict_lm
?predict.lm
runApp("Mileage", display.mode = "showcase")
mtcars
setwd("/Volumes/MY_PERM/Dev/Data_Science_Coursera/regmods")
source('~/.active-rstudio-document', echo=TRUE)
levels(mtcars1$cyl)
levels(mtcars1$man)
which(6 %in% levels(mtcars1$cyl))
which(4 %in% levels(mtcars1$cyl))
mtcars1$cyl[mtcars1$cyl == 4]
mtcars1$cyl[mtcars1$cyl == 6]
?mapLevels
temp <- cut(mtcars1$cyl, 4)
?cut
levels(mtcars1$cyl)
?which
which(4 %in% levels(mtcars1$cyl))
which(6 %in% levels(mtcars1$cyl))
which(8 %in% levels(mtcars1$cyl))
match(8 %in% levels(mtcars1$cyl))
?match
match(8, levels(mtcars1$cyl))
match(6, levels(mtcars1$cyl))
match(4, levels(mtcars1$cyl))
runApp("Mileage", display.mode = "showcase")
setwd("/Volumes/MY_PERM/Dev/Data_Science_Coursera/regmods")
runApp("Mileage", display.mode = "showcase")
setwd("/Volumes/MY_PERM/Dev/Data_Science_Coursera/devdataprod")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
runApp("Mileage", display.mode = "showcase")
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
paste("a", "b")
?paste
shiny::runApp('Mileage')
paste("a", "b", sep = "")
shiny::runApp('Mileage')
str(mtcars)
paste(mtcars$cyl[1], "_Cyl", sep = "")
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
paste(mtcars$cyl, "_Cyl", sep = "")
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
install.packages("shinythemes")
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
??ggplot_colors
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
scale_color_manual
?scale_color_manual
shiny::runApp('Mileage')
?geom_abline
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
?unit
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
install.packages("shinyBS")
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
?bstooltip
?bsTooltip
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
source('~/.active-rstudio-document', echo=TRUE)
summary(fit10)
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
?geom_point
?pch
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
geom_point
?geom_point
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
?scale_fill_manual
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
?div
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
shiny::runApp('Mileage')
install.packages("slidify")
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
create
create()
library(slidify)
author('mydeck')
shiny::runApp('/Volumes/MY_PERM/Dev/Data_Science_Coursera/devdataprod/Mileage')
slidify("index.Rmd")
?unit
install.packages(c("BH", "caret", "digest", "geosphere", "GGally", "ggmap", "ggplot2", "Hmisc", "htmltools", "knitr", "maps", "mgcv", "nlme", "Rcpp", "RcppArmadillo", "rgeos", "rJava", "rmarkdown", "shiny"))
install.packages(c("BH", "caret", "digest", "geosphere", "GGally",
install.packages(c("BH", "caret", "digest", "geosphere", "GGally", "ggmap", "ggplot2", "Hmisc", "htmltools", "knitr", "maps", "mgcv", "nlme", "Rcpp", "RcppArmadillo", "rgeos", "rJava", "rmarkdown", "shiny"))
install.packages(c("BH", "caret", "digest", "geosphere", "GGally",
install.packages(c("BH", "caret", "digest", "geosphere", "GGally", "ggmap", "ggplot2", "Hmisc", "htmltools", "knitr", "maps", "mgcv", "nlme", "Rcpp", "RcppArmadillo", "rgeos", "rJava", "rmarkdown", "shiny"))
install.packages(c("BH", "caret", "digest", "geosphere", "GGally",
install.packages("BH")
install.packages("caret")
install.packages("digest")
install.packages("digest")
install.packages("digest")
install.packages("geosphere")
install.packages(c("GGally", "ggmap", "ggplot2", "Hmisc", "htmltools", "knitr", "maps", "mgcv", "nlme", "Rcpp", "RcppArmadillo", "rgeos", "rJava", "rmarkdown", "shiny"))
install.packages(c("GGally", "ggmap", "ggplot2", "Hmisc", "htmltools",
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
install.packages("GGally")
install.packages(c("ggmap", "Hmisc", "htmltools", "knitr", "maps", "mgcv", "nlme", "Rcpp", "RcppArmadillo", "rgeos", "rJava", "rmarkdown", "shiny"))
install.packages("nlme")
install.packages("rgeos")
